// Copyright (c) 2023 Pierre G. Boutquin. All rights reserved.
//
//  Licensed under the Apache License, Version 2.0 (the "License").
//  You may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//

using Boutquin.Trading.Domain.Enums;

namespace Boutquin.Trading.Domain.Interfaces;

/// <summary>
/// Represents the strategy for determining the position size of assets.
/// </summary>
/// <remarks>
/// The IPositionSizer interface is used to determine the number of units (shares, contracts, etc.)
/// of an asset to buy or sell based on the target capital and other factors. This helps manage risk
/// and control the allocation of capital to different assets in a strategy.
/// </remarks>
public interface IPositionSizer
{
    /// <summary>
    /// Calculates the position size for the given asset based on the target capital, signal type, and timestamp.
    /// </summary>
    /// <param name="timestamp">The timestamp of the signal event.</param>
    /// <param name="asset">The asset for which to calculate the position size.</param>
    /// <param name="signalType">The type of signal generated by the trading strategy.</param>
    /// <param name="targetCapital">The target capital allocated to the asset.</param>
    /// <returns>The calculated position size for the given asset.</returns>
    int GetPositionSize(DateOnly timestamp, string asset, SignalType signalType, decimal targetCapital);

    /// <summary>
    /// Updates the parameters of the position sizer based on the given strategy.
    /// </summary>
    /// <param name="strategy">The strategy instance to use for updating the position sizer parameters.</param>
    void UpdateParameters(IStrategy strategy);
}
